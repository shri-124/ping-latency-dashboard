# version: "3.9"


# services:
#   pinger:
#     build:
#       context: ./pinger
#       dockerfile: Dockerfile
#     container_name: pinger
#     environment:
#       - TARGETS_FILE=/config/targets.yml
#       - SCRAPE_INTERVAL_SECONDS=15
#       - REQUEST_TIMEOUT_SECONDS=5
#     volumes:
#       - ./config:/config:ro
#     ports:
#       - "8000:8000" # FastAPI (health + alert webhook + /metrics)
#   networks: [monitoring]


#   prometheus:
#     image: prom/prometheus:v2.54.1
#     container_name: prometheus
#     command:
#       - --config.file=/etc/prometheus/prometheus.yml
#       - --web.enable-lifecycle
#     volumes:
#       - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
#       - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
#     ports:
#       - "9090:9090"
#     networks: [monitoring]
#     depends_on: [pinger]


#   alertmanager:
#     image: prom/alertmanager:v0.27.0
#     container_name: alertmanager
#     command: ["--config.file=/etc/alertmanager/alertmanager.yml"]
#     volumes:
#         - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
#     ports:
#         - "9093:9093"
#     networks: [monitoring]
#     depends_on: [prometheus]


#   grafana:
#     image: grafana/grafana:11.1.4
#     container_name: grafana
#     environment:
#       - GF_AUTH_ANONYMOUS_ENABLED=true
#       - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
#       - GF_SECURITY_ALLOW_EMBEDDING=true
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./grafana/provisioning:/etc/grafana/provisioning:ro
#     networks: [monitoring]
#     depends_on: [prometheus]


# networks:
# monitoring:
# driver: bridge


version: "3.9"

services:
  pinger:
    build:
      context: ./pinger
      dockerfile: Dockerfile
    container_name: pinger
    environment:
      - TARGETS_FILE=/config/targets.yml
      - SCRAPE_INTERVAL_SECONDS=15
      - REQUEST_TIMEOUT_SECONDS=5
    volumes:
      - ./config:/config:ro
    ports:
      - "8000:8000"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
    ports:
      - "9090:9090"
    networks:
      - monitoring
    depends_on:
      - pinger

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    command: ["--config.file=/etc/alertmanager/alertmanager.yml"]
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - "9093:9093"
    networks:
      - monitoring
    depends_on:
      - prometheus

  grafana:
    image: grafana/grafana:11.1.4
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ALLOW_EMBEDDING=true
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - monitoring
    depends_on:
      - prometheus

networks:
  monitoring:
    driver: bridge